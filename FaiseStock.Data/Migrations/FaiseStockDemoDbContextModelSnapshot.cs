// <auto-generated />
using System;
using FaiseStock.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FaiseStock.Data.Migrations
{
    [DbContext(typeof(FaiseStockDemoDbContext))]
    partial class FaiseStockDemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FaiseStock.Data.Models.Contest", b =>
                {
                    b.Property<string>("ContestId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contest_id");

                    b.Property<string>("ContestName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("contest_name");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_date_time");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_date_time");

                    b.HasKey("ContestId")
                        .HasName("PRIMARY");

                    b.ToTable("contest", (string)null);
                });

            modelBuilder.Entity("FaiseStock.Data.Models.ContestParticipant", b =>
                {
                    b.Property<string>("ContestId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contest_id");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_id");

                    b.Property<double?>("FinalBalance")
                        .HasColumnType("double")
                        .HasColumnName("final_balance");

                    b.Property<double>("InitialBalance")
                        .HasColumnType("double")
                        .HasColumnName("initial_balance");

                    b.HasKey("ContestId", "UserId")
                        .HasName("PRIMARY");

                    b.HasIndex("UserId");

                    b.ToTable("contest_participants", (string)null);
                });

            modelBuilder.Entity("FaiseStock.Data.Models.DepositHistory", b =>
                {
                    b.Property<string>("DepositId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("deposit_id");

                    b.Property<double>("Amount")
                        .HasColumnType("double")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_at");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_id");

                    b.HasKey("DepositId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "deposit_history_user_id_foreign");

                    b.ToTable("deposit_history", (string)null);
                });

            modelBuilder.Entity("FaiseStock.Data.Models.TopUser", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_at");

                    b.Property<string>("ContestId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contest_id");

                    b.Property<double>("IncreasedAmount")
                        .HasColumnType("double")
                        .HasColumnName("increased_amount");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("rank");

                    b.Property<double>("Roic")
                        .HasColumnType("double")
                        .HasColumnName("ROIC");

                    b.HasKey("UserId", "CreateAt")
                        .HasName("PRIMARY");

                    b.HasIndex("ContestId");

                    b.ToTable("top_user", (string)null);
                });

            modelBuilder.Entity("FaiseStock.Data.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("FaiseStock.Data.Models.Wallet", b =>
                {
                    b.Property<string>("WalletId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("wallet_id");

                    b.Property<double>("Balance")
                        .HasColumnType("double")
                        .HasColumnName("balance");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_id");

                    b.HasKey("WalletId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "wallet_user_id_foreign");

                    b.ToTable("wallet", (string)null);
                });

            modelBuilder.Entity("FaiseStock.Data.Models.ContestParticipant", b =>
                {
                    b.HasOne("FaiseStock.Data.Models.Contest", "Contest")
                        .WithMany("ContestParticipants")
                        .HasForeignKey("ContestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("contest_participants_contest_id_foreign");

                    b.HasOne("FaiseStock.Data.Models.User", "User")
                        .WithMany("ContestParticipants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("contest_participants_user_id_foreign");

                    b.Navigation("Contest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FaiseStock.Data.Models.DepositHistory", b =>
                {
                    b.HasOne("FaiseStock.Data.Models.User", "User")
                        .WithMany("DepositHistories")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("deposit_history_user_id_foreign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FaiseStock.Data.Models.TopUser", b =>
                {
                    b.HasOne("FaiseStock.Data.Models.Contest", "Contest")
                        .WithMany("TopUsers")
                        .HasForeignKey("ContestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("top_user_contest_id_foreign");

                    b.HasOne("FaiseStock.Data.Models.User", "User")
                        .WithMany("TopUsers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("top_user_user_id_foreign");

                    b.Navigation("Contest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FaiseStock.Data.Models.Wallet", b =>
                {
                    b.HasOne("FaiseStock.Data.Models.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("wallet_user_id_foreign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FaiseStock.Data.Models.Contest", b =>
                {
                    b.Navigation("ContestParticipants");

                    b.Navigation("TopUsers");
                });

            modelBuilder.Entity("FaiseStock.Data.Models.User", b =>
                {
                    b.Navigation("ContestParticipants");

                    b.Navigation("DepositHistories");

                    b.Navigation("TopUsers");

                    b.Navigation("Wallets");
                });
#pragma warning restore 612, 618
        }
    }
}
